apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
  namespace: sparkfund
  labels:
    app: notification-service
    tier: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: notification-service
        image: sparkfund/notification-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: db-host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: db-port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: db-password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: db-name
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: smtp-host
        - name: SMTP_PORT
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: smtp-port
        - name: SMTP_USER
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: smtp-user
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: smtp-password
        - name: TWILIO_ACCOUNT_SID
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: twilio-account-sid
        - name: TWILIO_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: notification-service-secrets
              key: twilio-auth-token
        - name: LOG_LEVEL
          value: "info"
        - name: ENVIRONMENT
          value: "production"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: config
          mountPath: /app/config
        - name: logs
          mountPath: /app/logs
        - name: templates
          mountPath: /app/templates
      volumes:
      - name: config
        configMap:
          name: notification-service-config
      - name: logs
        emptyDir: {}
      - name: templates
        configMap:
          name: notification-templates
---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
  namespace: sparkfund
spec:
  selector:
    app: notification-service
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: notification-service-ingress
  namespace: sparkfund
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "10r/s"
    nginx.ingress.kubernetes.io/rate-limit-burst: "20"
spec:
  tls:
  - hosts:
    - notifications.sparkfund.com
    secretName: notification-service-tls
  rules:
  - host: notifications.sparkfund.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: notification-service-config
  namespace: sparkfund
data:
  config.yaml: |
    server:
      port: 8080
      read_timeout: 30s
      write_timeout: 30s
      idle_timeout: 120s
    security:
      rate_limit:
        enabled: true
        requests_per_second: 10
        burst: 20
      cors:
        allowed_origins:
          - https://app.sparkfund.com
        allowed_methods:
          - GET
          - POST
          - PUT
          - DELETE
        allowed_headers:
          - Authorization
          - Content-Type
        max_age: 86400
    logging:
      level: info
      format: json
      output: stdout
    metrics:
      enabled: true
      path: /metrics
    audit:
      enabled: true
      retention_days: 90
      sensitive_fields:
        - password
        - credit_card
        - bank_account
    email:
      templates_dir: /app/templates
      default_from: noreply@sparkfund.com
      retry:
        max_attempts: 3
        initial_delay: 5s
        max_delay: 1m
    sms:
      provider: twilio
      retry:
        max_attempts: 3
        initial_delay: 5s
        max_delay: 1m
    queue:
      batch_size: 100
      max_retries: 3
      dead_letter_ttl: 7d
    cache:
      ttl: 1h
      max_size: 1000 