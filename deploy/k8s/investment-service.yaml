apiVersion: apps/v1
kind: Deployment
metadata:
  name: investment-service
  namespace: sparkfund
  labels:
    app: investment-service
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: investment-service
  template:
    metadata:
      labels:
        app: investment-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: investment-service
        image: sparkfund/investment-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9090
          name: metrics
        resources:
          requests:
            cpu: "200m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "info"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: investment-service-config
              key: db-host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: investment-service-config
              key: db-port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: investment-service-config
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: investment-service-secrets
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: investment-service-secrets
              key: db-password
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: investment-service-config
              key: redis-url
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              name: investment-service-config
              key: kafka-brokers
        volumeMounts:
        - name: config
          mountPath: /etc/investment-service
      volumes:
      - name: config
        configMap:
          name: investment-service-config
---
apiVersion: v1
kind: Service
metadata:
  name: investment-service
  namespace: sparkfund
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: metrics
  selector:
    app: investment-service
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: investment-service-network-policy
  namespace: sparkfund
spec:
  podSelector:
    matchLabels:
      app: investment-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: sparkfund
      podSelector:
        matchLabels:
          app: api-gateway
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: sparkfund
      podSelector:
        matchLabels:
          app: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: sparkfund
      podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - namespaceSelector:
        matchLabels:
          name: sparkfund
      podSelector:
        matchLabels:
          app: kafka
    ports:
    - protocol: TCP
      port: 9092 