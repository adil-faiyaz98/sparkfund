environment: production

server:
  port: "8081"
  read_timeout: 5s
  write_timeout: 10s
  idle_timeout: 120s
  shutdown_timeout: 30s
  trusted_proxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16

database:
  host: postgres
  port: "5432"
  user: postgres
  password: ${DB_PASSWORD}
  name: kyc_service
  sslmode: require
  max_idle_conns: 10
  max_open_conns: 100
  conn_max_lifetime: 1h
  conn_max_idle_time: 10m

jwt:
  secret: ${JWT_SECRET}
  expiry: 24h
  refresh: 168h
  issuer: sparkfund
  enabled: true

rate_limit:
  enabled: true
  requests: 100
  window: 1m
  burst: 20

metrics:
  enabled: true
  path: /metrics

log:
  level: info
  format: json
  output: stdout
  request_log: true

circuit_breaker:
  enabled: true
  timeout: 30s
  max_concurrent_requests: 100
  error_threshold_percentage: 50
  request_volume_threshold: 20
  sleep_window: 5s

security:
  allowed_origins:
    - https://sparkfund.com
    - https://app.sparkfund.com
  allowed_methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed_headers:
    - Content-Type
    - Content-Length
    - Accept-Encoding
    - Authorization
    - X-CSRF-Token
  trusted_proxies:
    - 10.0.0.0/8
    - 172.16.0.0/12
    - 192.168.0.0/16
  enable_csrf: true

feature:
  enable_swagger: true
  enable_auth: true
  enable_metrics: true

tracing:
  enabled: true
  service_name: kyc-service

cache:
  enabled: true
  type: redis
  ttl: 10m
  redis:
    host: redis
    port: 6379
    password: ${REDIS_PASSWORD}
    db: 0
    prefix: kyc:

tls:
  enabled: true
  cert_file: /etc/ssl/certs/kyc-service.crt
  key_file: /etc/ssl/private/kyc-service.key
  min_version: "1.2"

ai:
  service_url: http://ai-service:8001
  api_key: ${AI_SERVICE_API_KEY}
  timeout: 30s
  max_retries: 3
  retry_delay: 1s
