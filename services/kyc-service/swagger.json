{
  "swagger": "2.0",
  "info": {
    "description": "API for managing KYC verifications",
    "title": "KYC Service API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "API Support",
      "url": "http://www.sparkfund.com/support",
      "email": "support@sparkfund.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by a space and your token. Example: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "description": "Authenticate and get a JWT token",
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Authenticate user",
        "security": [],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Get the health status of the service",
        "produces": [
          "application/json"
        ],
        "tags": [
          "health"
        ],
        "summary": "Get service health",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "interface"
              }
            }
          }
        }
      }
    },
    "/verifications": {
      "get": {
        "description": "Get a list of verifications with pagination",
        "produces": [
          "application/json"
        ],
        "tags": [
          "verifications"
        ],
        "summary": "List verifications",
        "parameters": [
          {
            "type": "integer",
            "default": 1,
            "minimum": 1,
            "description": "Page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 20,
            "maximum": 100,
            "minimum": 1,
            "description": "Page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": [
              "PENDING",
              "IN_PROGRESS",
              "COMPLETED",
              "FAILED",
              "EXPIRED"
            ],
            "type": "string",
            "description": "Filter by status",
            "name": "status",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of verifications",
            "schema": {
              "$ref": "#/definitions/VerificationsResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create a new verification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "verifications"
        ],
        "summary": "Create verification",
        "parameters": [
          {
            "description": "Verification data",
            "name": "verification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created verification",
            "schema": {
              "$ref": "#/definitions/VerificationResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/verifications/{id}": {
      "get": {
        "description": "Get a verification by its ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "verifications"
        ],
        "summary": "Get verification by ID",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Verification ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Verification details",
            "schema": {
              "$ref": "#/definitions/VerificationResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Verification not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "Update an existing verification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "verifications"
        ],
        "summary": "Update verification",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Verification ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Verification data",
            "name": "verification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated verification",
            "schema": {
              "$ref": "#/definitions/VerificationResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Verification not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "Delete a verification",
        "produces": [
          "application/json"
        ],
        "tags": [
          "verifications"
        ],
        "summary": "Delete verification",
        "parameters": [
          {
            "type": "string",
            "format": "uuid",
            "description": "Verification ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Verification not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "example": "2025-05-05T15:04:05Z"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 400
        },
        "details": {
          "type": "string",
          "example": "Invalid verification ID format"
        },
        "message": {
          "type": "string",
          "example": "Bad request"
        }
      }
    },
    "Verification": {
      "type": "object",
      "properties": {
        "completed_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-05T15:04:05Z"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-05T15:04:05Z"
        },
        "document_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440003"
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440000"
        },
        "kyc_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440002"
        },
        "method": {
          "type": "string",
          "example": "DOCUMENT"
        },
        "notes": {
          "type": "string",
          "example": "Verification in progress"
        },
        "status": {
          "type": "string",
          "example": "PENDING"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-05T15:04:05Z"
        },
        "user_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440001"
        },
        "verifier_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440004"
        }
      }
    },
    "VerificationRequest": {
      "type": "object",
      "required": [
        "user_id",
        "kyc_id",
        "method",
        "status"
      ],
      "properties": {
        "document_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440003"
        },
        "kyc_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440002"
        },
        "method": {
          "type": "string",
          "example": "DOCUMENT"
        },
        "notes": {
          "type": "string",
          "example": "Verification in progress"
        },
        "status": {
          "type": "string",
          "example": "PENDING"
        },
        "user_id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440001"
        }
      }
    },
    "VerificationResponse": {
      "type": "object",
      "properties": {
        "verification": {
          "$ref": "#/definitions/Verification"
        }
      }
    },
    "VerificationsResponse": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "example": 1
        },
        "page_size": {
          "type": "integer",
          "example": 20
        },
        "total": {
          "type": "integer",
          "example": 10
        },
        "verifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Verification"
          }
        }
      }
    }
  }
}
