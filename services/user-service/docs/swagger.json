{
  "swagger": "2.0",
  "info": {
    "title": "User Service API",
    "description": "API for managing user accounts, authentication, and profile information",
    "version": "1.0.0",
    "contact": {
      "name": "SparkFund API Team",
      "email": "api@sparkfund.com"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://sparkfund.com/terms"
    }
  },
  "host": "localhost:8083",
  "basePath": "/api/v1",
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by a space and your token. Example: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the service is healthy",
        "tags": ["health"],
        "security": [],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "UP"
                },
                "service": {
                  "type": "string",
                  "example": "user-service"
                },
                "version": {
                  "type": "string",
                  "example": "1.0.0"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate a user and get a JWT token",
        "tags": ["auth"],
        "security": [],
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "password123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-04-06T00:00:00Z"
                },
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account",
        "tags": ["auth"],
        "security": [],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["email", "password", "first_name", "last_name"],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "password123"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "phone": {
                  "type": "string",
                  "example": "+1234567890"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-04-06T00:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Email already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Get a list of all users",
        "tags": ["users"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "type": "integer",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "schema": {
              "type": "object",
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                },
                "total": {
                  "type": "integer",
                  "example": 100
                },
                "page": {
                  "type": "integer",
                  "example": 1
                },
                "limit": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Get a user by their ID",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Update a user's information",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "User ID"
          },
          {
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "phone": {
                  "type": "string",
                  "example": "+1234567890"
                },
                "address": {
                  "type": "string",
                  "example": "123 Main St, City, Country"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user",
        "tags": ["users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid",
            "description": "User ID"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "example": "550e8400-e29b-41d4-a716-446655440000"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "user@example.com"
        },
        "first_name": {
          "type": "string",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "example": "Doe"
        },
        "phone": {
          "type": "string",
          "example": "+1234567890"
        },
        "address": {
          "type": "string",
          "example": "123 Main St, City, Country"
        },
        "status": {
          "type": "string",
          "enum": ["ACTIVE", "INACTIVE", "SUSPENDED"],
          "example": "ACTIVE"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-06T00:00:00Z"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "example": "2025-04-06T00:00:00Z"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "Bad Request"
        },
        "details": {
          "type": "string",
          "example": "Invalid email format"
        }
      }
    }
  }
}