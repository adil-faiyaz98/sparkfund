name: Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight

env:
  REGISTRY: ghcr.io
  TRIVY_VERSION: 0.45.1
  GOSEC_VERSION: 2.17.0

jobs:
  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v${{ env.TRIVY_VERSION }}
      
      - name: Scan KYC Service Image
        run: |
          trivy image --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed ${{ env.REGISTRY }}/adil-faiyaz98/sparkfund/kyc-service:latest || true
      
      - name: Scan Investment Service Image
        run: |
          trivy image --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed ${{ env.REGISTRY }}/adil-faiyaz98/sparkfund/investment-service:latest || true
      
      - name: Scan User Service Image
        run: |
          trivy image --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed ${{ env.REGISTRY }}/adil-faiyaz98/sparkfund/user-service:latest || true
      
      - name: Scan API Gateway Image
        run: |
          trivy image --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed ${{ env.REGISTRY }}/adil-faiyaz98/sparkfund/api-gateway:latest || true
      
      - name: Scan AI Service Image
        run: |
          trivy image --severity HIGH,CRITICAL --exit-code 1 --ignore-unfixed ${{ env.REGISTRY }}/adil-faiyaz98/sparkfund/ai-service:latest || true
      
      - name: Scan Filesystem
        run: |
          trivy fs --severity HIGH,CRITICAL --exit-code 0 .
      
      - name: Generate Trivy Report
        run: |
          mkdir -p reports
          trivy image --format json --output reports/trivy-report.json ${{ env.REGISTRY }}/adil-faiyaz98/sparkfund/kyc-service:latest || true
      
      - name: Upload Trivy Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: reports/trivy-report.json
          retention-days: 7
  
  gosec-scan:
    name: GoSec Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install GoSec
        run: |
          curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $GITHUB_WORKSPACE/bin v${{ env.GOSEC_VERSION }}
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      
      - name: Run GoSec
        run: |
          mkdir -p reports
          gosec -fmt=json -out=reports/gosec-report.json ./...
      
      - name: Upload GoSec Report
        uses: actions/upload-artifact@v3
        with:
          name: gosec-report
          path: reports/gosec-report.json
          retention-days: 7
  
  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Install Nancy
        run: |
          go install github.com/sonatype-nexus-community/nancy@latest
      
      - name: Run Nancy
        run: |
          mkdir -p reports
          go list -json -deps ./... | nancy sleuth -o reports/nancy-report.json || true
      
      - name: Upload Nancy Report
        uses: actions/upload-artifact@v3
        with:
          name: nancy-report
          path: reports/nancy-report.json
          retention-days: 7
  
  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [trivy-scan, gosec-scan, dependency-check]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download Trivy Report
        uses: actions/download-artifact@v3
        with:
          name: trivy-report
          path: reports
      
      - name: Download GoSec Report
        uses: actions/download-artifact@v3
        with:
          name: gosec-report
          path: reports
      
      - name: Download Nancy Report
        uses: actions/download-artifact@v3
        with:
          name: nancy-report
          path: reports
      
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Security Scan Results",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Security Scan Results*\n\nRepository: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Trivy Scan*: ${{ needs.trivy-scan.result == 'success' && ':white_check_mark: Passed' || ':x: Failed' }}\n*GoSec Scan*: ${{ needs.gosec-scan.result == 'success' && ':white_check_mark: Passed' || ':x: Failed' }}\n*Dependency Check*: ${{ needs.dependency-check.result == 'success' && ':white_check_mark: Passed' || ':x: Failed' }}"
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Workflow"
                      },
                      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
