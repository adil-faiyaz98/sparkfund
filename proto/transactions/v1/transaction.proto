syntax = "proto3";

package transactions.v1;

option go_package = "github.com/adil-faiyaz98/money-pulse/proto/transactions/v1";

import "common/v1/common.proto";

// Transaction types
enum TransactionType {
  TRANSACTION_TYPE_UNSPECIFIED = 0;
  TRANSACTION_TYPE_DEPOSIT = 1;
  TRANSACTION_TYPE_WITHDRAWAL = 2;
  TRANSACTION_TYPE_TRANSFER = 3;
  TRANSACTION_TYPE_PAYMENT = 4;
  TRANSACTION_TYPE_INVESTMENT = 5;
}

// Transaction status
enum TransactionStatus {
  TRANSACTION_STATUS_UNSPECIFIED = 0;
  TRANSACTION_STATUS_PENDING = 1;
  TRANSACTION_STATUS_COMPLETED = 2;
  TRANSACTION_STATUS_FAILED = 3;
  TRANSACTION_STATUS_CANCELLED = 4;
}

// Transaction entity
message Transaction {
  string id = 1;
  string user_id = 2;
  string account_id = 3;
  TransactionType type = 4;
  common.v1.Money amount = 5;
  string description = 6;
  TransactionStatus status = 7;
  string reference_id = 8;
  common.v1.Timestamp created_at = 9;
  common.v1.Timestamp updated_at = 10;
}

// Create transaction request
message CreateTransactionRequest {
  string user_id = 1;
  string account_id = 2;
  TransactionType type = 3;
  common.v1.Money amount = 4;
  string description = 5;
  string reference_id = 6;
}

// Create transaction response
message CreateTransactionResponse {
  common.v1.Response response = 1;
  Transaction transaction = 2;
}

// Get transaction request
message GetTransactionRequest {
  string id = 1;
}

// Get transaction response
message GetTransactionResponse {
  common.v1.Response response = 1;
  Transaction transaction = 2;
}

// Get user transactions request
message GetUserTransactionsRequest {
  string user_id = 1;
  common.v1.PaginationParams pagination = 2;
  TransactionType type = 3;
  TransactionStatus status = 4;
}

// Get user transactions response
message GetUserTransactionsResponse {
  common.v1.Response response = 1;
  repeated Transaction transactions = 2;
  common.v1.PaginationResponse pagination = 3;
}

// Get account transactions request
message GetAccountTransactionsRequest {
  string account_id = 1;
  common.v1.PaginationParams pagination = 2;
  TransactionType type = 3;
  TransactionStatus status = 4;
}

// Get account transactions response
message GetAccountTransactionsResponse {
  common.v1.Response response = 1;
  repeated Transaction transactions = 2;
  common.v1.PaginationResponse pagination = 3;
}

// Update transaction status request
message UpdateTransactionStatusRequest {
  string id = 1;
  TransactionStatus status = 2;
}

// Update transaction status response
message UpdateTransactionStatusResponse {
  common.v1.Response response = 1;
  Transaction transaction = 2;
}

// Transaction service definition
service TransactionService {
  rpc CreateTransaction(CreateTransactionRequest) returns (CreateTransactionResponse) {}
  rpc GetTransaction(GetTransactionRequest) returns (GetTransactionResponse) {}
  rpc GetUserTransactions(GetUserTransactionsRequest) returns (GetUserTransactionsResponse) {}
  rpc GetAccountTransactions(GetAccountTransactionsRequest) returns (GetAccountTransactionsResponse) {}
  rpc UpdateTransactionStatus(UpdateTransactionStatusRequest) returns (UpdateTransactionStatusResponse) {}
} 