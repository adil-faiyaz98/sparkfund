syntax = "proto3";

package reports.v1;

option go_package = "github.com/adil-faiyaz98/money-pulse/proto/reports/v1";

import "common/v1/common.proto";

// Report types
enum ReportType {
  REPORT_TYPE_UNSPECIFIED = 0;
  REPORT_TYPE_BALANCE_SHEET = 1;
  REPORT_TYPE_INCOME_STATEMENT = 2;
  REPORT_TYPE_CASH_FLOW = 3;
  REPORT_TYPE_INVESTMENT_PERFORMANCE = 4;
  REPORT_TYPE_LOAN_SUMMARY = 5;
  REPORT_TYPE_TAX_SUMMARY = 6;
}

// Report format
enum ReportFormat {
  REPORT_FORMAT_UNSPECIFIED = 0;
  REPORT_FORMAT_PDF = 1;
  REPORT_FORMAT_CSV = 2;
  REPORT_FORMAT_JSON = 3;
  REPORT_FORMAT_EXCEL = 4;
}

// Report entity
message Report {
  string id = 1;
  string user_id = 2;
  ReportType type = 3;
  ReportFormat format = 4;
  string title = 5;
  string description = 6;
  string file_url = 7;
  common.v1.Timestamp start_date = 8;
  common.v1.Timestamp end_date = 9;
  common.v1.Timestamp created_at = 10;
  common.v1.Timestamp expires_at = 11;
}

// Create report request
message CreateReportRequest {
  string user_id = 1;
  ReportType type = 2;
  ReportFormat format = 3;
  string title = 4;
  string description = 5;
  common.v1.Timestamp start_date = 6;
  common.v1.Timestamp end_date = 7;
}

// Create report response
message CreateReportResponse {
  common.v1.Response response = 1;
  Report report = 2;
}

// Get report request
message GetReportRequest {
  string id = 1;
}

// Get report response
message GetReportResponse {
  common.v1.Response response = 1;
  Report report = 2;
}

// Get user reports request
message GetUserReportsRequest {
  string user_id = 1;
  common.v1.PaginationParams pagination = 2;
  ReportType type = 3;
  ReportFormat format = 4;
}

// Get user reports response
message GetUserReportsResponse {
  common.v1.Response response = 1;
  repeated Report reports = 2;
  common.v1.PaginationResponse pagination = 3;
}

// Delete report request
message DeleteReportRequest {
  string id = 1;
}

// Delete report response
message DeleteReportResponse {
  common.v1.Response response = 1;
}

// Balance sheet data
message BalanceSheetData {
  common.v1.Money total_assets = 1;
  common.v1.Money total_liabilities = 2;
  common.v1.Money net_worth = 3;
  repeated AssetCategory assets = 4;
  repeated LiabilityCategory liabilities = 5;
}

// Asset category
message AssetCategory {
  string name = 1;
  common.v1.Money amount = 2;
  double percentage = 3;
}

// Liability category
message LiabilityCategory {
  string name = 1;
  common.v1.Money amount = 2;
  double percentage = 3;
}

// Income statement data
message IncomeStatementData {
  common.v1.Money total_income = 1;
  common.v1.Money total_expenses = 2;
  common.v1.Money net_income = 3;
  repeated IncomeCategory income = 4;
  repeated ExpenseCategory expenses = 5;
}

// Income category
message IncomeCategory {
  string name = 1;
  common.v1.Money amount = 2;
  double percentage = 3;
}

// Expense category
message ExpenseCategory {
  string name = 1;
  common.v1.Money amount = 2;
  double percentage = 3;
}

// Cash flow data
message CashFlowData {
  common.v1.Money net_cash_flow = 1;
  common.v1.Money operating_cash_flow = 2;
  common.v1.Money investing_cash_flow = 3;
  common.v1.Money financing_cash_flow = 4;
  repeated CashFlowCategory inflows = 5;
  repeated CashFlowCategory outflows = 6;
}

// Cash flow category
message CashFlowCategory {
  string name = 1;
  common.v1.Money amount = 2;
  double percentage = 3;
}

// Get report data request
message GetReportDataRequest {
  string report_id = 1;
}

// Get report data response
message GetReportDataResponse {
  common.v1.Response response = 1;
  oneof data {
    BalanceSheetData balance_sheet = 1;
    IncomeStatementData income_statement = 2;
    CashFlowData cash_flow = 3;
  }
}

// Report service definition
service ReportService {
  rpc CreateReport(CreateReportRequest) returns (CreateReportResponse) {}
  rpc GetReport(GetReportRequest) returns (GetReportResponse) {}
  rpc GetUserReports(GetUserReportsRequest) returns (GetUserReportsResponse) {}
  rpc DeleteReport(DeleteReportRequest) returns (DeleteReportResponse) {}
  rpc GetReportData(GetReportDataRequest) returns (GetReportDataResponse) {}
} 